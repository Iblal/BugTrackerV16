@using BugTrackerV16.Services.Interfaces;
@using X.PagedList;
@using X.PagedList.Mvc.Core;


@inject IBTProjectService BTProjectService
@inject IBTHelperService HelperFunctionsService

@model IEnumerable<BugTrackerV16.Entities.Ticket>;

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />

<h1>My tickets</h1>

<hr />

@if (User.IsInRole("ProjectManager") || User.IsInRole("Submitter"))
{
    <p>

        <a asp-action="Create">Create New Ticket</a>
    </p>
}


<table id="ticketsTable" class="table table-striped table-hover table-sm">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Description
            </th>
            <th>
                Type
            </th>
            <th>
                Reported By
            </th>
            <th>
                Assigned To
            </th>
            <th>
                Priority
            </th>
            <th>
                Status
            </th>
            <th>
                Project
            </th>
            <th>
                Created Date
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReportedByUser)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AssignedToUser)
                </td>
                <td>
                    @if (item.Priority.Equals("Critical"))
                    {
                        <span class="badge badge-danger">Critical</span>
                    }
                    else if (item.Priority.Equals("High"))
                    {
                        <span class="badge badge-warning">High</span>
                    }
                    else if (item.Priority.Equals("Medium"))
                    {
                        <span class="badge badge-primary">Medium</span>
                    }
                    else if (item.Priority.Equals("Low"))
                    {
                        <span class="bage badge-dark">Low</span>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit |</a>
                    <a asp-action="Details" asp-route-id="@item.Id">Details |</a>
                    @if (User.IsInRole("ProjectManager") || User.IsInRole("Admin"))
                    {
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete |</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    <a asp-controller="Tickets" asp-action="Index">View all tickets</a>
</div>

